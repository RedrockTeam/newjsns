define(["./core","./data/var/data_priv","./deferred","./callbacks"],function(B,A){B.extend({queue:function(D,C,F){var E;if(D){C=(C||"fx")+"queue";E=A.get(D,C);if(F){if(!E||B.isArray(F)){E=A.access(D,C,B.makeArray(F))}else{E.push(F)}}return E||[]}},dequeue:function(G,C){C=C||"fx";var I=B.queue(G,C),F=I.length,H=I.shift(),D=B._queueHooks(G,C),E=function(){B.dequeue(G,C)};if(H==="inprogress"){H=I.shift();F--}if(H){if(C==="fx"){I.unshift("inprogress")}delete D.stop;H.call(G,E,D)}if(!F&&D){D.empty.fire()}},_queueHooks:function(E,C){var D=C+"queueHooks";return A.get(E,D)||A.access(E,D,{empty:B.Callbacks("once memory").add(function(){A.remove(E,[C+"queue",D])})})}});B.fn.extend({queue:function(C,E){var D=2;if(typeof C!=="string"){E=C;C="fx";D--}if(arguments.length<D){return B.queue(this[0],C)}return E===undefined?this:this.each(function(){var F=B.queue(this,C,E);B._queueHooks(this,C);if(C==="fx"&&F[0]!=="inprogress"){B.dequeue(this,C)}})},dequeue:function(C){return this.each(function(){B.dequeue(this,C)})},clearQueue:function(C){return this.queue(C||"fx",[])},promise:function(J,I){var F,D=1,E=B.Deferred(),C=this,G=this.length,H=function(){if(!(--D)){E.resolveWith(C,[C])}};if(typeof J!=="string"){I=J;J=undefined}J=J||"fx";while(G--){F=A.get(C[G],J+"queueHooks");if(F&&F.empty){D++;F.empty.add(H)}}H();return E.promise(I)}});return B});