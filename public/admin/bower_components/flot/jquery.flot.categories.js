(function(H){var F={xaxis:{categories:null},yaxis:{categories:null}};function D(S,P,K,Q){var O=P.xaxis.options.mode=="categories",M=P.yaxis.options.mode=="categories";if(!(O||M)){return}var R=Q.format;if(!R){var J=P;R=[];R.push({x:true,number:true,required:true});R.push({y:true,number:true,required:true});if(J.bars.show||(J.lines.show&&J.lines.fill)){var L=!!((J.bars.show&&J.bars.zero)||(J.lines.show&&J.lines.zero));R.push({y:true,number:true,required:false,defaultValue:0,autoscale:L});if(J.bars.horizontal){delete R[R.length-1].y;R[R.length-1].x=true}}Q.format=R}for(var N=0;N<R.length;++N){if(R[N].x&&O){R[N].number=false}if(R[N].y&&M){R[N].number=false}}}function C(L){var K=-1;for(var J in L){if(L[J]>K){K=L[J]}}return K+1}function B(M){var K=[];for(var J in M.categories){var L=M.categories[J];if(L>=M.min&&L<=M.max){K.push([L,J])}}K.sort(function(O,N){return O[0]-N[0]});return K}function G(N,P,L){if(N[P].options.mode!="categories"){return}if(!N[P].categories){var O={},K=N[P].options.categories||{};if(H.isArray(K)){for(var J=0;J<K.length;++J){O[K[J]]=J}}else{for(var M in K){O[M]=K[M]}}N[P].categories=O}if(!N[P].options.ticks){N[P].options.ticks=B}E(L,P,N[P].categories)}function E(P,J,S){var R=P.points,M=P.pointsize,L=P.format,O=J.charAt(0),K=C(S);for(var N=0;N<R.length;N+=M){if(R[N]==null){continue}for(var Q=0;Q<M;++Q){var T=R[N+Q];if(T==null||!L[Q][O]){continue}if(!(T in S)){S[T]=K;++K}R[N+Q]=S[T]}}}function I(K,L,J){G(L,"xaxis",J);G(L,"yaxis",J)}function A(J){J.hooks.processRawData.push(D);J.hooks.processDatapoints.push(I)}H.plot.plugins.push({init:A,options:F,name:"categories",version:"1.0"})})(jQuery);