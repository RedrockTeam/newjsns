(function(G){var E={series:{points:{errorbars:null,xerr:{err:"x",show:null,asymmetric:null,upperCap:null,lowerCap:null,color:null,radius:null},yerr:{err:"y",show:null,asymmetric:null,upperCap:null,lowerCap:null,color:null,radius:null}}}};function D(M,N,O,L){if(!N.points.errorbars){return}var K=[{x:true,number:true,required:true},{y:true,number:true,required:true}];var J=N.points.errorbars;if(J=="x"||J=="xy"){if(N.points.xerr.asymmetric){K.push({x:true,number:true,required:true});K.push({x:true,number:true,required:true})}else{K.push({x:true,number:true,required:true})}}if(J=="y"||J=="xy"){if(N.points.yerr.asymmetric){K.push({y:true,number:true,required:true});K.push({y:true,number:true,required:true})}else{K.push({y:true,number:true,required:true})}}L.format=K}function H(Q,N){var J=Q.datapoints.points;var T=null,O=null,R=null,M=null;var P=Q.points.xerr,K=Q.points.yerr;var S=Q.points.errorbars;if(S=="x"||S=="xy"){if(P.asymmetric){T=J[N+2];O=J[N+3];if(S=="xy"){if(K.asymmetric){R=J[N+4];M=J[N+5]}else{R=J[N+4]}}}else{T=J[N+2];if(S=="xy"){if(K.asymmetric){R=J[N+3];M=J[N+4]}else{R=J[N+3]}}}}else{if(S=="y"){if(K.asymmetric){R=J[N+2];M=J[N+3]}else{R=J[N+2]}}}if(O==null){O=T}if(M==null){M=R}var L=[T,O,R,M];if(!P.show){L[0]=null;L[1]=null}if(!K.show){L[2]=null;L[3]=null}return L}function B(N,T,b){var Y=b.datapoints.points,J=b.datapoints.pointsize,O=[b.xaxis,b.yaxis],Q=b.points.radius,M=[b.points.xerr,b.points.yerr];var W=false;if(O[0].p2c(O[0].max)<O[0].p2c(O[0].min)){W=true;var K=M[0].lowerCap;M[0].lowerCap=M[0].upperCap;M[0].upperCap=K}var V=false;if(O[1].p2c(O[1].min)<O[1].p2c(O[1].max)){V=true;var K=M[1].lowerCap;M[1].lowerCap=M[1].upperCap;M[1].upperCap=K}for(var P=0;P<b.datapoints.points.length;P+=J){var f=H(b,P);for(var L=0;L<M.length;L++){var Z=[O[L].min,O[L].max];if(f[L*M.length]){var X=Y[P],g=Y[P+1];var U=[X,g][L]+f[L*M.length+1],d=[X,g][L]-f[L*M.length];if(M[L].err=="x"){if(g>O[1].max||g<O[1].min||U<O[0].min||d>O[0].max){continue}}if(M[L].err=="y"){if(X>O[0].max||X<O[0].min||U<O[1].min||d>O[1].max){continue}}var h=true,R=true;if(U>Z[1]){h=false;U=Z[1]}if(d<Z[0]){R=false;d=Z[0]}if((M[L].err=="x"&&W)||(M[L].err=="y"&&V)){var K=d;d=U;U=K;K=R;R=h;h=K;K=Z[0];Z[0]=Z[1];Z[1]=K}X=O[0].p2c(X),g=O[1].p2c(g),U=O[L].p2c(U);d=O[L].p2c(d);Z[0]=O[L].p2c(Z[0]);Z[1]=O[L].p2c(Z[1]);var a=M[L].lineWidth?M[L].lineWidth:b.points.lineWidth,S=b.points.shadowSize!=null?b.points.shadowSize:b.shadowSize;if(a>0&&S>0){var c=S/2;T.lineWidth=c;T.strokeStyle="rgba(0,0,0,0.1)";A(T,M[L],X,g,U,d,h,R,Q,c+c/2,Z);T.strokeStyle="rgba(0,0,0,0.2)";A(T,M[L],X,g,U,d,h,R,Q,c/2,Z)}T.strokeStyle=M[L].color?M[L].color:b.color;T.lineWidth=a;A(T,M[L],X,g,U,d,h,R,Q,0,Z)}}}}function A(O,N,S,T,M,J,Q,K,P,L,R){T+=L;M+=L;J+=L;if(N.err=="x"){if(M>S+P){F(O,[[M,T],[Math.max(S+P,R[0]),T]])}else{Q=false}if(J<S-P){F(O,[[Math.min(S-P,R[1]),T],[J,T]])}else{K=false}}else{if(M<T-P){F(O,[[S,M],[S,Math.min(T-P,R[0])]])}else{Q=false}if(J>T+P){F(O,[[S,Math.max(T+P,R[1])],[S,J]])}else{K=false}}P=N.radius!=null?N.radius:P;if(Q){if(N.upperCap=="-"){if(N.err=="x"){F(O,[[M,T-P],[M,T+P]])}else{F(O,[[S-P,M],[S+P,M]])}}else{if(G.isFunction(N.upperCap)){if(N.err=="x"){N.upperCap(O,M,T,P)}else{N.upperCap(O,S,M,P)}}}}if(K){if(N.lowerCap=="-"){if(N.err=="x"){F(O,[[J,T-P],[J,T+P]])}else{F(O,[[S-P,J],[S+P,J]])}}else{if(G.isFunction(N.lowerCap)){if(N.err=="x"){N.lowerCap(O,J,T,P)}else{N.lowerCap(O,S,J,P)}}}}}function F(L,J){L.beginPath();L.moveTo(J[0][0],J[0][1]);for(var K=1;K<J.length;K++){L.lineTo(J[K][0],J[K][1])}L.stroke()}function I(K,L){var J=K.getPlotOffset();L.save();L.translate(J.left,J.top);G.each(K.getData(),function(M,N){if(N.points.errorbars&&(N.points.xerr.show||N.points.yerr.show)){B(K,L,N)}});L.restore()}function C(J){J.hooks.processRawData.push(D);J.hooks.draw.push(I)}G.plot.plugins.push({init:C,options:E,name:"errorbars",version:"1.0"})})(jQuery);